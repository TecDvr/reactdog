{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { DOM_EVENT, getRelativeTime, isNumber, monitor } from '@datadog/browser-core';\nimport { LifeCycleEventType } from './lifeCycle';\nimport { FAKE_INITIAL_DOCUMENT } from './resourceUtils';\n\nfunction supportPerformanceObject() {\n  return window.performance !== undefined && 'getEntries' in performance;\n}\n\nfunction supportPerformanceNavigationTimingEvent() {\n  return window.PerformanceObserver && PerformanceObserver.supportedEntryTypes !== undefined && PerformanceObserver.supportedEntryTypes.includes('navigation');\n}\n\nexport function startPerformanceCollection(lifeCycle, session) {\n  retrieveInitialDocumentResourceTiming(function (timing) {\n    handlePerformanceEntries(session, lifeCycle, [timing]);\n  });\n\n  if (supportPerformanceObject()) {\n    handlePerformanceEntries(session, lifeCycle, performance.getEntries());\n  }\n\n  if (window.PerformanceObserver) {\n    var observer = new PerformanceObserver(monitor(function (entries) {\n      return handlePerformanceEntries(session, lifeCycle, entries.getEntries());\n    }));\n    var entryTypes = ['resource', 'navigation', 'longtask']; // cf https://github.com/w3c/paint-timing/issues/40\n\n    if (document.visibilityState === 'visible') {\n      entryTypes.push('paint');\n    }\n\n    observer.observe({\n      entryTypes: entryTypes\n    });\n\n    if (supportPerformanceObject() && 'addEventListener' in performance) {\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=1559377\n      performance.addEventListener('resourcetimingbufferfull', function () {\n        performance.clearResourceTimings();\n      });\n    }\n  }\n\n  if (!supportPerformanceNavigationTimingEvent()) {\n    retrieveNavigationTimingWhenLoaded(function (timing) {\n      handlePerformanceEntries(session, lifeCycle, [timing]);\n    });\n  }\n}\n\nfunction retrieveInitialDocumentResourceTiming(callback) {\n  var timing;\n\n  if (supportPerformanceNavigationTimingEvent() && performance.getEntriesByType('navigation').length > 0) {\n    var navigationEntry = performance.getEntriesByType('navigation')[0];\n    timing = __assign({}, navigationEntry.toJSON());\n  } else {\n    timing = __assign(__assign({}, computeRelativePerformanceTiming()), {\n      name: window.location.href,\n      decodedBodySize: 0,\n      startTime: 0\n    });\n  }\n\n  timing.entryType = 'resource';\n  timing.initiatorType = FAKE_INITIAL_DOCUMENT;\n  timing.duration = timing.responseEnd;\n  callback(timing);\n}\n\nfunction retrieveNavigationTimingWhenLoaded(callback) {\n  function sendFakeTiming() {\n    var timing = __assign(__assign({}, computeRelativePerformanceTiming()), {\n      entryType: 'navigation'\n    });\n\n    callback(timing);\n  }\n\n  if (document.readyState === 'complete') {\n    sendFakeTiming();\n  } else {\n    var listener_1 = monitor(function () {\n      window.removeEventListener(DOM_EVENT.LOAD, listener_1); // Send it a bit after the actual load event, so the \"loadEventEnd\" timing is accurate\n\n      setTimeout(monitor(sendFakeTiming));\n    });\n    window.addEventListener(DOM_EVENT.LOAD, listener_1);\n  }\n}\n\nfunction computeRelativePerformanceTiming() {\n  var result = {};\n  var timing = performance.timing;\n\n  for (var key in timing) {\n    if (isNumber(timing[key])) {\n      result[key] = timing[key] === 0 ? 0 : getRelativeTime(timing[key]);\n    }\n  }\n\n  return result;\n}\n\nfunction handlePerformanceEntries(session, lifeCycle, entries) {\n  function notify(entry) {\n    lifeCycle.notify(LifeCycleEventType.PERFORMANCE_ENTRY_COLLECTED, entry);\n  }\n\n  if (session.isTrackedWithResource()) {\n    entries.filter(function (entry) {\n      return entry.entryType === 'resource';\n    }).forEach(notify);\n  }\n\n  entries.filter(function (entry) {\n    return entry.entryType === 'navigation';\n  }) // Exclude incomplete navigation entries by filtering out those who have a loadEventEnd at 0\n  .filter(function (entry) {\n    return entry.loadEventEnd > 0;\n  }).forEach(notify);\n  entries.filter(function (entry) {\n    return entry.entryType === 'paint';\n  }).forEach(notify);\n  entries.filter(function (entry) {\n    return entry.entryType === 'longtask';\n  }).forEach(notify);\n}","map":{"version":3,"sources":["../src/performanceCollection.ts"],"names":[],"mappings":";AAAA,SAAS,SAAT,EAAoB,eAApB,EAAqC,QAArC,EAA+C,OAA/C,QAA8D,uBAA9D;AAEA,SAAoB,kBAApB,QAA8C,aAA9C;AACA,SAAS,qBAAT,QAAsC,iBAAtC;;AAOA,SAAS,wBAAT,GAAiC;AAC/B,SAAO,MAAM,CAAC,WAAP,KAAuB,SAAvB,IAAoC,gBAAgB,WAA3D;AACD;;AAED,SAAS,uCAAT,GAAgD;AAC9C,SACG,MAAwB,CAAC,mBAAzB,IACD,mBAAmB,CAAC,mBAApB,KAA4C,SAD3C,IAED,mBAAmB,CAAC,mBAApB,CAAwC,QAAxC,CAAiD,YAAjD,CAHF;AAKD;;AAED,OAAM,SAAU,0BAAV,CAAqC,SAArC,EAA2D,OAA3D,EAA8E;AAClF,EAAA,qCAAqC,CAAC,UAAC,MAAD,EAAO;AAC3C,IAAA,wBAAwB,CAAC,OAAD,EAAU,SAAV,EAAqB,CAAC,MAAD,CAArB,CAAxB;AACD,GAFoC,CAArC;;AAGA,MAAI,wBAAwB,EAA5B,EAAgC;AAC9B,IAAA,wBAAwB,CAAC,OAAD,EAAU,SAAV,EAAqB,WAAW,CAAC,UAAZ,EAArB,CAAxB;AACD;;AACD,MAAK,MAAwB,CAAC,mBAA9B,EAAmD;AACjD,QAAM,QAAQ,GAAG,IAAI,mBAAJ,CACf,OAAO,CAAC,UAAC,OAAD,EAAQ;AAAK,aAAA,wBAAwB,CAAC,OAAD,EAAU,SAAV,EAAqB,OAAO,CAApD,UAA6C,EAArB,CAAxB;AAAkE,KAAhF,CADQ,CAAjB;AAGA,QAAM,UAAU,GAAG,CAAC,UAAD,EAAa,YAAb,EAA2B,UAA3B,CAAnB,CAJiD,CAMjD;;AACA,QAAI,QAAQ,CAAC,eAAT,KAA6B,SAAjC,EAA4C;AAC1C,MAAA,UAAU,CAAC,IAAX,CAAgB,OAAhB;AACD;;AACD,IAAA,QAAQ,CAAC,OAAT,CAAiB;AAAE,MAAA,UAAU,EAAA;AAAZ,KAAjB;;AAEA,QAAI,wBAAwB,MAAM,sBAAsB,WAAxD,EAAqE;AACnE;AACA,MAAA,WAAW,CAAC,gBAAZ,CAA6B,0BAA7B,EAAyD,YAAA;AACvD,QAAA,WAAW,CAAC,oBAAZ;AACD,OAFD;AAGD;AACF;;AACD,MAAI,CAAC,uCAAuC,EAA5C,EAAgD;AAC9C,IAAA,kCAAkC,CAAC,UAAC,MAAD,EAAO;AACxC,MAAA,wBAAwB,CAAC,OAAD,EAAU,SAAV,EAAqB,CAAC,MAAD,CAArB,CAAxB;AACD,KAFiC,CAAlC;AAGD;AACF;;AAoBD,SAAS,qCAAT,CAA+C,QAA/C,EAAoG;AAClG,MAAI,MAAJ;;AACA,MAAI,uCAAuC,MAAM,WAAW,CAAC,gBAAZ,CAA6B,YAA7B,EAA2C,MAA3C,GAAoD,CAArG,EAAwG;AACtG,QAAM,eAAe,GAAG,WAAW,CAAC,gBAAZ,CAA6B,YAA7B,EAA2C,CAA3C,CAAxB;AACA,IAAA,MAAM,GAAA,QAAA,CAAA,EAAA,EAAQ,eAAe,CAAC,MAAhB,EAAR,CAAN;AACD,GAHD,MAGO;AACL,IAAA,MAAM,GAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EAAQ,gCAAgC,EAAxC,CAAA,EAA0C;AAAE,MAAA,IAAI,EAAE,MAAM,CAAC,QAAP,CAAgB,IAAxB;AAA8B,MAAA,eAAe,EAAE,CAA/C;AAAkD,MAAA,SAAS,EAAE;AAA7D,KAA1C,CAAN;AACD;;AACD,EAAA,MAAM,CAAC,SAAP,GAAmB,UAAnB;AACA,EAAA,MAAM,CAAC,aAAP,GAAuB,qBAAvB;AACA,EAAA,MAAM,CAAC,QAAP,GAAkB,MAAM,CAAC,WAAzB;AACA,EAAA,QAAQ,CAAC,MAAD,CAAR;AACD;;AAUD,SAAS,kCAAT,CAA4C,QAA5C,EAAmG;AACjG,WAAS,cAAT,GAAuB;AACrB,QAAM,MAAM,GAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACP,gCAAgC,EADzB,CAAA,EAC2B;AACrC,MAAA,SAAS,EAAE;AAD0B,KAD3B,CAAZ;;AAIA,IAAA,QAAQ,CAAE,MAAF,CAAR;AACD;;AAED,MAAI,QAAQ,CAAC,UAAT,KAAwB,UAA5B,EAAwC;AACtC,IAAA,cAAc;AACf,GAFD,MAEO;AACL,QAAM,UAAQ,GAAG,OAAO,CAAC,YAAA;AACvB,MAAA,MAAM,CAAC,mBAAP,CAA2B,SAAS,CAAC,IAArC,EAA2C,UAA3C,EADuB,CAEvB;;AACA,MAAA,UAAU,CAAC,OAAO,CAAC,cAAD,CAAR,CAAV;AACD,KAJuB,CAAxB;AAMA,IAAA,MAAM,CAAC,gBAAP,CAAwB,SAAS,CAAC,IAAlC,EAAwC,UAAxC;AACD;AACF;;AAMD,SAAS,gCAAT,GAAyC;AACvC,MAAM,MAAM,GAAsC,EAAlD;AACA,MAAM,MAAM,GAAG,WAAW,CAAC,MAA3B;;AACA,OAAK,IAAM,GAAX,IAAkB,MAAlB,EAA0B;AACxB,QAAI,QAAQ,CAAC,MAAM,CAAC,GAAD,CAAP,CAAZ,EAA2B;AACzB,MAAA,MAAM,CAAC,GAAD,CAAN,GAAc,MAAM,CAAC,GAAD,CAAN,KAAgB,CAAhB,GAAoB,CAApB,GAAwB,eAAe,CAAC,MAAM,CAAC,GAAD,CAAP,CAArD;AACD;AACF;;AACD,SAAO,MAAP;AACD;;AAED,SAAS,wBAAT,CAAkC,OAAlC,EAAuD,SAAvD,EAA6E,OAA7E,EAAwG;AACtG,WAAS,MAAT,CAAgB,KAAhB,EAAuC;AACrC,IAAA,SAAS,CAAC,MAAV,CAAiB,kBAAkB,CAAC,2BAApC,EAAiE,KAAjE;AACD;;AAED,MAAI,OAAO,CAAC,qBAAR,EAAJ,EAAqC;AACnC,IAAA,OAAO,CAAC,MAAR,CAAe,UAAC,KAAD,EAAM;AAAK,aAAA,KAAK,CAAC,SAAN,KAAA,UAAA;AAA8B,KAAxD,EAA0D,OAA1D,CAAkE,MAAlE;AACD;;AAED,EAAA,OAAO,CACJ,MADH,CACU,UAAC,KAAD,EAAM;AAAK,WAAA,KAAK,CAAC,SAAN,KAAA,YAAA;AAAgC,GADrD,EAEE;AAFF,GAGG,MAHH,CAGU,UAAC,KAAD,EAAM;AAAK,WAAC,KAAqC,CAAC,YAAtC,GAAD,CAAA;AAAuD,GAH5E,EAIG,OAJH,CAIW,MAJX;AAMA,EAAA,OAAO,CAAC,MAAR,CAAe,UAAC,KAAD,EAAM;AAAK,WAAA,KAAK,CAAC,SAAN,KAAA,OAAA;AAA2B,GAArD,EAAuD,OAAvD,CAA+D,MAA/D;AACA,EAAA,OAAO,CAAC,MAAR,CAAe,UAAC,KAAD,EAAM;AAAK,WAAA,KAAK,CAAC,SAAN,KAAA,UAAA;AAA8B,GAAxD,EAA0D,OAA1D,CAAkE,MAAlE;AACD","sourceRoot":"","sourcesContent":["import { __assign } from \"tslib\";\nimport { DOM_EVENT, getRelativeTime, isNumber, monitor } from '@datadog/browser-core';\nimport { LifeCycleEventType } from './lifeCycle';\nimport { FAKE_INITIAL_DOCUMENT } from './resourceUtils';\nfunction supportPerformanceObject() {\n    return window.performance !== undefined && 'getEntries' in performance;\n}\nfunction supportPerformanceNavigationTimingEvent() {\n    return (window.PerformanceObserver &&\n        PerformanceObserver.supportedEntryTypes !== undefined &&\n        PerformanceObserver.supportedEntryTypes.includes('navigation'));\n}\nexport function startPerformanceCollection(lifeCycle, session) {\n    retrieveInitialDocumentResourceTiming(function (timing) {\n        handlePerformanceEntries(session, lifeCycle, [timing]);\n    });\n    if (supportPerformanceObject()) {\n        handlePerformanceEntries(session, lifeCycle, performance.getEntries());\n    }\n    if (window.PerformanceObserver) {\n        var observer = new PerformanceObserver(monitor(function (entries) { return handlePerformanceEntries(session, lifeCycle, entries.getEntries()); }));\n        var entryTypes = ['resource', 'navigation', 'longtask'];\n        // cf https://github.com/w3c/paint-timing/issues/40\n        if (document.visibilityState === 'visible') {\n            entryTypes.push('paint');\n        }\n        observer.observe({ entryTypes: entryTypes });\n        if (supportPerformanceObject() && 'addEventListener' in performance) {\n            // https://bugzilla.mozilla.org/show_bug.cgi?id=1559377\n            performance.addEventListener('resourcetimingbufferfull', function () {\n                performance.clearResourceTimings();\n            });\n        }\n    }\n    if (!supportPerformanceNavigationTimingEvent()) {\n        retrieveNavigationTimingWhenLoaded(function (timing) {\n            handlePerformanceEntries(session, lifeCycle, [timing]);\n        });\n    }\n}\nfunction retrieveInitialDocumentResourceTiming(callback) {\n    var timing;\n    if (supportPerformanceNavigationTimingEvent() && performance.getEntriesByType('navigation').length > 0) {\n        var navigationEntry = performance.getEntriesByType('navigation')[0];\n        timing = __assign({}, navigationEntry.toJSON());\n    }\n    else {\n        timing = __assign(__assign({}, computeRelativePerformanceTiming()), { name: window.location.href, decodedBodySize: 0, startTime: 0 });\n    }\n    timing.entryType = 'resource';\n    timing.initiatorType = FAKE_INITIAL_DOCUMENT;\n    timing.duration = timing.responseEnd;\n    callback(timing);\n}\nfunction retrieveNavigationTimingWhenLoaded(callback) {\n    function sendFakeTiming() {\n        var timing = __assign(__assign({}, computeRelativePerformanceTiming()), { entryType: 'navigation' });\n        callback(timing);\n    }\n    if (document.readyState === 'complete') {\n        sendFakeTiming();\n    }\n    else {\n        var listener_1 = monitor(function () {\n            window.removeEventListener(DOM_EVENT.LOAD, listener_1);\n            // Send it a bit after the actual load event, so the \"loadEventEnd\" timing is accurate\n            setTimeout(monitor(sendFakeTiming));\n        });\n        window.addEventListener(DOM_EVENT.LOAD, listener_1);\n    }\n}\nfunction computeRelativePerformanceTiming() {\n    var result = {};\n    var timing = performance.timing;\n    for (var key in timing) {\n        if (isNumber(timing[key])) {\n            result[key] = timing[key] === 0 ? 0 : getRelativeTime(timing[key]);\n        }\n    }\n    return result;\n}\nfunction handlePerformanceEntries(session, lifeCycle, entries) {\n    function notify(entry) {\n        lifeCycle.notify(LifeCycleEventType.PERFORMANCE_ENTRY_COLLECTED, entry);\n    }\n    if (session.isTrackedWithResource()) {\n        entries.filter(function (entry) { return entry.entryType === 'resource'; }).forEach(notify);\n    }\n    entries\n        .filter(function (entry) { return entry.entryType === 'navigation'; })\n        // Exclude incomplete navigation entries by filtering out those who have a loadEventEnd at 0\n        .filter(function (entry) { return entry.loadEventEnd > 0; })\n        .forEach(notify);\n    entries.filter(function (entry) { return entry.entryType === 'paint'; }).forEach(notify);\n    entries.filter(function (entry) { return entry.entryType === 'longtask'; }).forEach(notify);\n}\n//# sourceMappingURL=performanceCollection.js.map"]},"metadata":{},"sourceType":"module"}