{"ast":null,"code":"import { performDraw, startSessionManagement } from '@datadog/browser-core';\nimport { LifeCycleEventType } from './lifeCycle';\nexport var RUM_SESSION_KEY = 'rum';\nexport var RumTrackingType;\n\n(function (RumTrackingType) {\n  RumTrackingType[\"NOT_TRACKED\"] = \"0\";\n  RumTrackingType[\"TRACKED_WITH_RESOURCES\"] = \"1\";\n  RumTrackingType[\"TRACKED_WITHOUT_RESOURCES\"] = \"2\";\n})(RumTrackingType || (RumTrackingType = {}));\n\nexport function startRumSession(configuration, lifeCycle) {\n  var session = startSessionManagement(RUM_SESSION_KEY, function (rawTrackingType) {\n    return computeSessionState(configuration, rawTrackingType);\n  });\n  session.renewObservable.subscribe(function () {\n    lifeCycle.notify(LifeCycleEventType.SESSION_RENEWED);\n  });\n  return {\n    getId: session.getId,\n    isTracked: function () {\n      return session.getId() !== undefined && isTracked(session.getTrackingType());\n    },\n    isTrackedWithResource: function () {\n      return session.getId() !== undefined && session.getTrackingType() === RumTrackingType.TRACKED_WITH_RESOURCES;\n    }\n  };\n}\n\nfunction computeSessionState(configuration, rawTrackingType) {\n  var trackingType;\n\n  if (hasValidRumSession(rawTrackingType)) {\n    trackingType = rawTrackingType;\n  } else if (!performDraw(configuration.sampleRate)) {\n    trackingType = RumTrackingType.NOT_TRACKED;\n  } else if (!performDraw(configuration.resourceSampleRate)) {\n    trackingType = RumTrackingType.TRACKED_WITHOUT_RESOURCES;\n  } else {\n    trackingType = RumTrackingType.TRACKED_WITH_RESOURCES;\n  }\n\n  return {\n    trackingType: trackingType,\n    isTracked: isTracked(trackingType)\n  };\n}\n\nfunction hasValidRumSession(trackingType) {\n  return trackingType === RumTrackingType.NOT_TRACKED || trackingType === RumTrackingType.TRACKED_WITH_RESOURCES || trackingType === RumTrackingType.TRACKED_WITHOUT_RESOURCES;\n}\n\nfunction isTracked(rumSessionType) {\n  return rumSessionType === RumTrackingType.TRACKED_WITH_RESOURCES || rumSessionType === RumTrackingType.TRACKED_WITHOUT_RESOURCES;\n}","map":{"version":3,"sources":["../src/rumSession.ts"],"names":[],"mappings":"AAAA,SAAwB,WAAxB,EAAqC,sBAArC,QAAmE,uBAAnE;AACA,SAAoB,kBAApB,QAA8C,aAA9C;AAEA,OAAO,IAAM,eAAe,GAAG,KAAxB;AAQP,OAAA,IAAY,eAAZ;;AAAA,CAAA,UAAY,eAAZ,EAA2B;AACzB,EAAA,eAAA,CAAA,aAAA,CAAA,GAAA,GAAA;AACA,EAAA,eAAA,CAAA,wBAAA,CAAA,GAAA,GAAA;AACA,EAAA,eAAA,CAAA,2BAAA,CAAA,GAAA,GAAA;AACD,CAJD,EAAY,eAAe,KAAf,eAAe,GAAA,EAAA,CAA3B;;AAMA,OAAM,SAAU,eAAV,CAA0B,aAA1B,EAAwD,SAAxD,EAA4E;AAChF,MAAM,OAAO,GAAG,sBAAsB,CAAC,eAAD,EAAkB,UAAC,eAAD,EAAgB;AACtE,WAAA,mBAAmB,CAAC,aAAD,EAAgB,eAAhB,CAAnB;AAAmD,GADf,CAAtC;AAIA,EAAA,OAAO,CAAC,eAAR,CAAwB,SAAxB,CAAkC,YAAA;AAChC,IAAA,SAAS,CAAC,MAAV,CAAiB,kBAAkB,CAAC,eAApC;AACD,GAFD;AAIA,SAAO;AACL,IAAA,KAAK,EAAE,OAAO,CAAC,KADV;AAEL,IAAA,SAAS,EAAE,YAAA;AAAM,aAAA,OAAO,CAAC,KAAR,OAAoB,SAApB,IAAiC,SAAS,CAAC,OAAO,CAAlD,eAA2C,EAAD,CAA1C;AAAqE,KAFjF;AAGL,IAAA,qBAAqB,EAAE,YAAA;AACrB,aAAA,OAAO,CAAC,KAAR,OAAoB,SAApB,IAAiC,OAAO,CAAC,eAAR,OAA8B,eAAe,CAAC,sBAA/E;AAAqG;AAJlG,GAAP;AAMD;;AAED,SAAS,mBAAT,CAA6B,aAA7B,EAA2D,eAA3D,EAAmF;AACjF,MAAI,YAAJ;;AACA,MAAI,kBAAkB,CAAC,eAAD,CAAtB,EAAyC;AACvC,IAAA,YAAY,GAAG,eAAf;AACD,GAFD,MAEO,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,UAAf,CAAhB,EAA4C;AACjD,IAAA,YAAY,GAAG,eAAe,CAAC,WAA/B;AACD,GAFM,MAEA,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,kBAAf,CAAhB,EAAoD;AACzD,IAAA,YAAY,GAAG,eAAe,CAAC,yBAA/B;AACD,GAFM,MAEA;AACL,IAAA,YAAY,GAAG,eAAe,CAAC,sBAA/B;AACD;;AACD,SAAO;AACL,IAAA,YAAY,EAAA,YADP;AAEL,IAAA,SAAS,EAAE,SAAS,CAAC,YAAD;AAFf,GAAP;AAID;;AAED,SAAS,kBAAT,CAA4B,YAA5B,EAAiD;AAC/C,SACE,YAAY,KAAK,eAAe,CAAC,WAAjC,IACA,YAAY,KAAK,eAAe,CAAC,sBADjC,IAEA,YAAY,KAAK,eAAe,CAAC,yBAHnC;AAKD;;AAED,SAAS,SAAT,CAAmB,cAAnB,EAA8D;AAC5D,SACE,cAAc,KAAK,eAAe,CAAC,sBAAnC,IACA,cAAc,KAAK,eAAe,CAAC,yBAFrC;AAID","sourceRoot":"","sourcesContent":["import { performDraw, startSessionManagement } from '@datadog/browser-core';\nimport { LifeCycleEventType } from './lifeCycle';\nexport var RUM_SESSION_KEY = 'rum';\nexport var RumTrackingType;\n(function (RumTrackingType) {\n    RumTrackingType[\"NOT_TRACKED\"] = \"0\";\n    RumTrackingType[\"TRACKED_WITH_RESOURCES\"] = \"1\";\n    RumTrackingType[\"TRACKED_WITHOUT_RESOURCES\"] = \"2\";\n})(RumTrackingType || (RumTrackingType = {}));\nexport function startRumSession(configuration, lifeCycle) {\n    var session = startSessionManagement(RUM_SESSION_KEY, function (rawTrackingType) {\n        return computeSessionState(configuration, rawTrackingType);\n    });\n    session.renewObservable.subscribe(function () {\n        lifeCycle.notify(LifeCycleEventType.SESSION_RENEWED);\n    });\n    return {\n        getId: session.getId,\n        isTracked: function () { return session.getId() !== undefined && isTracked(session.getTrackingType()); },\n        isTrackedWithResource: function () {\n            return session.getId() !== undefined && session.getTrackingType() === RumTrackingType.TRACKED_WITH_RESOURCES;\n        },\n    };\n}\nfunction computeSessionState(configuration, rawTrackingType) {\n    var trackingType;\n    if (hasValidRumSession(rawTrackingType)) {\n        trackingType = rawTrackingType;\n    }\n    else if (!performDraw(configuration.sampleRate)) {\n        trackingType = RumTrackingType.NOT_TRACKED;\n    }\n    else if (!performDraw(configuration.resourceSampleRate)) {\n        trackingType = RumTrackingType.TRACKED_WITHOUT_RESOURCES;\n    }\n    else {\n        trackingType = RumTrackingType.TRACKED_WITH_RESOURCES;\n    }\n    return {\n        trackingType: trackingType,\n        isTracked: isTracked(trackingType),\n    };\n}\nfunction hasValidRumSession(trackingType) {\n    return (trackingType === RumTrackingType.NOT_TRACKED ||\n        trackingType === RumTrackingType.TRACKED_WITH_RESOURCES ||\n        trackingType === RumTrackingType.TRACKED_WITHOUT_RESOURCES);\n}\nfunction isTracked(rumSessionType) {\n    return (rumSessionType === RumTrackingType.TRACKED_WITH_RESOURCES ||\n        rumSessionType === RumTrackingType.TRACKED_WITHOUT_RESOURCES);\n}\n//# sourceMappingURL=rumSession.js.map"]},"metadata":{},"sourceType":"module"}