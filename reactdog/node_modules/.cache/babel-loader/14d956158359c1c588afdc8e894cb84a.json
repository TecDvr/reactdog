{"ast":null,"code":"import { DOM_EVENT, generateUUID } from '@datadog/browser-core';\nimport { getElementContent } from './getElementContent';\nimport { LifeCycleEventType } from './lifeCycle';\nimport { trackEventCounts } from './trackEventCounts';\nimport { waitIdlePageActivity } from './trackPageActivities';\nexport var UserActionType;\n\n(function (UserActionType) {\n  UserActionType[\"CLICK\"] = \"click\";\n  UserActionType[\"CUSTOM\"] = \"custom\";\n})(UserActionType || (UserActionType = {}));\n\nvar pendingAutoUserAction;\nexport function startUserActionCollection(lifeCycle) {\n  addEventListener(DOM_EVENT.CLICK, processClick, {\n    capture: true\n  });\n\n  function processClick(event) {\n    if (!(event.target instanceof Element)) {\n      return;\n    }\n\n    newUserAction(lifeCycle, UserActionType.CLICK, getElementContent(event.target));\n  } // New views trigger the cancellation of the current pending User Action\n\n\n  lifeCycle.subscribe(LifeCycleEventType.VIEW_COLLECTED, function () {\n    if (pendingAutoUserAction) {\n      pendingAutoUserAction.stop();\n    }\n  });\n  return {\n    stop: function () {\n      if (pendingAutoUserAction) {\n        pendingAutoUserAction.stop();\n      }\n\n      removeEventListener(DOM_EVENT.CLICK, processClick, {\n        capture: true\n      });\n    }\n  };\n}\n\nfunction newUserAction(lifeCycle, type, name) {\n  if (pendingAutoUserAction) {\n    // Discard any new user action if another one is already occurring.\n    return;\n  }\n\n  var id = generateUUID();\n  var startTime = performance.now();\n\n  var _a = trackEventCounts(lifeCycle),\n      eventCounts = _a.eventCounts,\n      stopEventCountsTracking = _a.stop;\n\n  var stopWaitIdlePageActivity = waitIdlePageActivity(lifeCycle, function (hadActivity, endTime) {\n    if (hadActivity) {\n      lifeCycle.notify(LifeCycleEventType.USER_ACTION_COLLECTED, {\n        id: id,\n        name: name,\n        startTime: startTime,\n        type: type,\n        duration: endTime - startTime,\n        measures: {\n          errorCount: eventCounts.errorCount,\n          longTaskCount: eventCounts.longTaskCount,\n          resourceCount: eventCounts.resourceCount\n        }\n      });\n    }\n\n    stopEventCountsTracking();\n    pendingAutoUserAction = undefined;\n  }).stop;\n  pendingAutoUserAction = {\n    id: id,\n    startTime: startTime,\n    stop: function () {\n      stopEventCountsTracking();\n      stopWaitIdlePageActivity();\n      pendingAutoUserAction = undefined;\n    }\n  };\n}\n\nexport function getUserActionReference(time) {\n  if (!pendingAutoUserAction || time !== undefined && time < pendingAutoUserAction.startTime) {\n    return undefined;\n  }\n\n  return {\n    id: pendingAutoUserAction.id\n  };\n}\nexport var $$tests = {\n  newUserAction: newUserAction,\n  resetUserAction: function () {\n    pendingAutoUserAction = undefined;\n  }\n};","map":{"version":3,"sources":["../src/userActionCollection.ts"],"names":[],"mappings":"AAAA,SAAkB,SAAlB,EAA6B,YAA7B,QAAiD,uBAAjD;AACA,SAAS,iBAAT,QAAkC,qBAAlC;AACA,SAAoB,kBAApB,QAA8C,aAA9C;AACA,SAAS,gBAAT,QAAiC,oBAAjC;AACA,SAAS,oBAAT,QAAqC,uBAArC;AAEA,OAAA,IAAY,cAAZ;;AAAA,CAAA,UAAY,cAAZ,EAA0B;AACxB,EAAA,cAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AACA,EAAA,cAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACD,CAHD,EAAY,cAAc,KAAd,cAAc,GAAA,EAAA,CAA1B;;AAiCA,IAAI,qBAAJ;AAEA,OAAM,SAAU,yBAAV,CAAoC,SAApC,EAAwD;AAC5D,EAAA,gBAAgB,CAAC,SAAS,CAAC,KAAX,EAAkB,YAAlB,EAAgC;AAAE,IAAA,OAAO,EAAE;AAAX,GAAhC,CAAhB;;AACA,WAAS,YAAT,CAAsB,KAAtB,EAAkC;AAChC,QAAI,EAAE,KAAK,CAAC,MAAN,YAAwB,OAA1B,CAAJ,EAAwC;AACtC;AACD;;AACD,IAAA,aAAa,CAAC,SAAD,EAAY,cAAc,CAAC,KAA3B,EAAkC,iBAAiB,CAAC,KAAK,CAAC,MAAP,CAAnD,CAAb;AACD,GAP2D,CAS5D;;;AACA,EAAA,SAAS,CAAC,SAAV,CAAoB,kBAAkB,CAAC,cAAvC,EAAuD,YAAA;AACrD,QAAI,qBAAJ,EAA2B;AACzB,MAAA,qBAAqB,CAAC,IAAtB;AACD;AACF,GAJD;AAMA,SAAO;AACL,IAAA,IAAI,EAAA,YAAA;AACF,UAAI,qBAAJ,EAA2B;AACzB,QAAA,qBAAqB,CAAC,IAAtB;AACD;;AACD,MAAA,mBAAmB,CAAC,SAAS,CAAC,KAAX,EAAkB,YAAlB,EAAgC;AAAE,QAAA,OAAO,EAAE;AAAX,OAAhC,CAAnB;AACD;AANI,GAAP;AAQD;;AAED,SAAS,aAAT,CAAuB,SAAvB,EAA6C,IAA7C,EAAmE,IAAnE,EAA+E;AAC7E,MAAI,qBAAJ,EAA2B;AACzB;AACA;AACD;;AAED,MAAM,EAAE,GAAG,YAAY,EAAvB;AACA,MAAM,SAAS,GAAG,WAAW,CAAC,GAAZ,EAAlB;;AAEM,MAAA,EAAA,GAAA,gBAAA,CAAA,SAAA,CAAA;AAAA,MAAE,WAAA,GAAA,EAAA,CAAA,WAAF;AAAA,MAAe,uBAAA,GAAA,EAAA,CAAA,IAAf;;AAEE,MAAA,wBAAA,GAAA,oBAAA,CAAA,SAAA,EAAA,UAAA,WAAA,EAAA,OAAA,EAAA;;;;;;;;;;;;;;;;;;GAAA,CAAA,CAA8B,IAA9B;AAoBR,EAAA,qBAAqB,GAAG;AACtB,IAAA,EAAE,EAAA,EADoB;AAEtB,IAAA,SAAS,EAAA,SAFa;AAGtB,IAAA,IAAI,EAAA,YAAA;AACF,MAAA,uBAAuB;AACvB,MAAA,wBAAwB;AACxB,MAAA,qBAAqB,GAAG,SAAxB;AACD;AAPqB,GAAxB;AASD;;AAKD,OAAM,SAAU,sBAAV,CAAiC,IAAjC,EAA8C;AAClD,MAAI,CAAC,qBAAD,IAA2B,IAAI,KAAK,SAAT,IAAsB,IAAI,GAAG,qBAAqB,CAAC,SAAlF,EAA8F;AAC5F,WAAO,SAAP;AACD;;AAED,SAAO;AAAE,IAAA,EAAE,EAAE,qBAAqB,CAAC;AAA5B,GAAP;AACD;AAED,OAAO,IAAM,OAAO,GAAG;AACrB,EAAA,aAAa,EAAA,aADQ;AAErB,EAAA,eAAe,EAAA,YAAA;AACb,IAAA,qBAAqB,GAAG,SAAxB;AACD;AAJoB,CAAhB","sourceRoot":"","sourcesContent":["import { DOM_EVENT, generateUUID } from '@datadog/browser-core';\nimport { getElementContent } from './getElementContent';\nimport { LifeCycleEventType } from './lifeCycle';\nimport { trackEventCounts } from './trackEventCounts';\nimport { waitIdlePageActivity } from './trackPageActivities';\nexport var UserActionType;\n(function (UserActionType) {\n    UserActionType[\"CLICK\"] = \"click\";\n    UserActionType[\"CUSTOM\"] = \"custom\";\n})(UserActionType || (UserActionType = {}));\nvar pendingAutoUserAction;\nexport function startUserActionCollection(lifeCycle) {\n    addEventListener(DOM_EVENT.CLICK, processClick, { capture: true });\n    function processClick(event) {\n        if (!(event.target instanceof Element)) {\n            return;\n        }\n        newUserAction(lifeCycle, UserActionType.CLICK, getElementContent(event.target));\n    }\n    // New views trigger the cancellation of the current pending User Action\n    lifeCycle.subscribe(LifeCycleEventType.VIEW_COLLECTED, function () {\n        if (pendingAutoUserAction) {\n            pendingAutoUserAction.stop();\n        }\n    });\n    return {\n        stop: function () {\n            if (pendingAutoUserAction) {\n                pendingAutoUserAction.stop();\n            }\n            removeEventListener(DOM_EVENT.CLICK, processClick, { capture: true });\n        },\n    };\n}\nfunction newUserAction(lifeCycle, type, name) {\n    if (pendingAutoUserAction) {\n        // Discard any new user action if another one is already occurring.\n        return;\n    }\n    var id = generateUUID();\n    var startTime = performance.now();\n    var _a = trackEventCounts(lifeCycle), eventCounts = _a.eventCounts, stopEventCountsTracking = _a.stop;\n    var stopWaitIdlePageActivity = waitIdlePageActivity(lifeCycle, function (hadActivity, endTime) {\n        if (hadActivity) {\n            lifeCycle.notify(LifeCycleEventType.USER_ACTION_COLLECTED, {\n                id: id,\n                name: name,\n                startTime: startTime,\n                type: type,\n                duration: endTime - startTime,\n                measures: {\n                    errorCount: eventCounts.errorCount,\n                    longTaskCount: eventCounts.longTaskCount,\n                    resourceCount: eventCounts.resourceCount,\n                },\n            });\n        }\n        stopEventCountsTracking();\n        pendingAutoUserAction = undefined;\n    }).stop;\n    pendingAutoUserAction = {\n        id: id,\n        startTime: startTime,\n        stop: function () {\n            stopEventCountsTracking();\n            stopWaitIdlePageActivity();\n            pendingAutoUserAction = undefined;\n        },\n    };\n}\nexport function getUserActionReference(time) {\n    if (!pendingAutoUserAction || (time !== undefined && time < pendingAutoUserAction.startTime)) {\n        return undefined;\n    }\n    return { id: pendingAutoUserAction.id };\n}\nexport var $$tests = {\n    newUserAction: newUserAction,\n    resetUserAction: function () {\n        pendingAutoUserAction = undefined;\n    },\n};\n//# sourceMappingURL=userActionCollection.js.map"]},"metadata":{},"sourceType":"module"}