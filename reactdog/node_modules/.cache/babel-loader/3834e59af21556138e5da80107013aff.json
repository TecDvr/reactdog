{"ast":null,"code":"import { getCookie } from './cookie';\nimport { persistSession } from './sessionManagement';\nexport var OLD_SESSION_COOKIE_NAME = '_dd';\nexport var OLD_RUM_COOKIE_NAME = '_dd_r';\nexport var OLD_LOGS_COOKIE_NAME = '_dd_l'; // duplicate values to avoid dependency issues\n\nexport var RUM_SESSION_KEY = 'rum';\nexport var LOGS_SESSION_KEY = 'logs';\n/**\n * This migration should remain in the codebase as long as older versions are available/live\n * to allow older sdk versions to be upgraded to newer versions without compatibility issues.\n */\n\nexport function tryOldCookiesMigration(sessionCookie) {\n  var sessionString = sessionCookie.get();\n  var oldSessionId = getCookie(OLD_SESSION_COOKIE_NAME);\n  var oldRumType = getCookie(OLD_RUM_COOKIE_NAME);\n  var oldLogsType = getCookie(OLD_LOGS_COOKIE_NAME);\n\n  if (!sessionString) {\n    var session = {};\n\n    if (oldSessionId) {\n      session.id = oldSessionId;\n    }\n\n    if (oldLogsType && /^[01]$/.test(oldLogsType)) {\n      session[LOGS_SESSION_KEY] = oldLogsType;\n    }\n\n    if (oldRumType && /^[012]$/.test(oldRumType)) {\n      session[RUM_SESSION_KEY] = oldRumType;\n    }\n\n    persistSession(session, sessionCookie);\n  }\n}","map":{"version":3,"sources":["../src/oldCookiesMigration.ts"],"names":[],"mappings":"AAAA,SAAsB,SAAtB,QAAuC,UAAvC;AACA,SAAS,cAAT,QAA6C,qBAA7C;AAEA,OAAO,IAAM,uBAAuB,GAAG,KAAhC;AACP,OAAO,IAAM,mBAAmB,GAAG,OAA5B;AACP,OAAO,IAAM,oBAAoB,GAAG,OAA7B,C,CAEP;;AACA,OAAO,IAAM,eAAe,GAAG,KAAxB;AACP,OAAO,IAAM,gBAAgB,GAAG,MAAzB;AAEP;;;;;AAIA,OAAM,SAAU,sBAAV,CAAiC,aAAjC,EAA2D;AAC/D,MAAM,aAAa,GAAG,aAAa,CAAC,GAAd,EAAtB;AACA,MAAM,YAAY,GAAG,SAAS,CAAC,uBAAD,CAA9B;AACA,MAAM,UAAU,GAAG,SAAS,CAAC,mBAAD,CAA5B;AACA,MAAM,WAAW,GAAG,SAAS,CAAC,oBAAD,CAA7B;;AACA,MAAI,CAAC,aAAL,EAAoB;AAClB,QAAM,OAAO,GAAiB,EAA9B;;AACA,QAAI,YAAJ,EAAkB;AAChB,MAAA,OAAO,CAAC,EAAR,GAAa,YAAb;AACD;;AACD,QAAI,WAAW,IAAI,SAAS,IAAT,CAAc,WAAd,CAAnB,EAA+C;AAC7C,MAAA,OAAO,CAAC,gBAAD,CAAP,GAA4B,WAA5B;AACD;;AACD,QAAI,UAAU,IAAI,UAAU,IAAV,CAAe,UAAf,CAAlB,EAA8C;AAC5C,MAAA,OAAO,CAAC,eAAD,CAAP,GAA2B,UAA3B;AACD;;AACD,IAAA,cAAc,CAAC,OAAD,EAAU,aAAV,CAAd;AACD;AACF","sourceRoot":"","sourcesContent":["import { getCookie } from './cookie';\nimport { persistSession } from './sessionManagement';\nexport var OLD_SESSION_COOKIE_NAME = '_dd';\nexport var OLD_RUM_COOKIE_NAME = '_dd_r';\nexport var OLD_LOGS_COOKIE_NAME = '_dd_l';\n// duplicate values to avoid dependency issues\nexport var RUM_SESSION_KEY = 'rum';\nexport var LOGS_SESSION_KEY = 'logs';\n/**\n * This migration should remain in the codebase as long as older versions are available/live\n * to allow older sdk versions to be upgraded to newer versions without compatibility issues.\n */\nexport function tryOldCookiesMigration(sessionCookie) {\n    var sessionString = sessionCookie.get();\n    var oldSessionId = getCookie(OLD_SESSION_COOKIE_NAME);\n    var oldRumType = getCookie(OLD_RUM_COOKIE_NAME);\n    var oldLogsType = getCookie(OLD_LOGS_COOKIE_NAME);\n    if (!sessionString) {\n        var session = {};\n        if (oldSessionId) {\n            session.id = oldSessionId;\n        }\n        if (oldLogsType && /^[01]$/.test(oldLogsType)) {\n            session[LOGS_SESSION_KEY] = oldLogsType;\n        }\n        if (oldRumType && /^[012]$/.test(oldRumType)) {\n            session[RUM_SESSION_KEY] = oldRumType;\n        }\n        persistSession(session, sessionCookie);\n    }\n}\n//# sourceMappingURL=oldCookiesMigration.js.map"]},"metadata":{},"sourceType":"module"}