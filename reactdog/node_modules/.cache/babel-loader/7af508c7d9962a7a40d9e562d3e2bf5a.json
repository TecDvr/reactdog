{"ast":null,"code":"import { getLinkElementOrigin, getLocationOrigin } from './utils';\nexport function normalizeUrl(url) {\n  return buildUrl(url, getLocationOrigin()).href;\n}\nexport function isValidUrl(url) {\n  try {\n    return !!buildUrl(url);\n  } catch (_a) {\n    return false;\n  }\n}\nexport function haveSameOrigin(url1, url2) {\n  return getOrigin(url1) === getOrigin(url2);\n}\nexport function getOrigin(url) {\n  return getLinkElementOrigin(buildUrl(url));\n}\nexport function getPathName(url) {\n  var pathname = buildUrl(url).pathname;\n  return pathname[0] === '/' ? pathname : \"/\" + pathname;\n}\nexport function getSearch(url) {\n  return buildUrl(url).search;\n}\nexport function getHash(url) {\n  return buildUrl(url).hash;\n}\n\nfunction buildUrl(url, base) {\n  if (checkURLSupported()) {\n    return base !== undefined ? new URL(url, base) : new URL(url);\n  }\n\n  if (base === undefined && !/:/.test(url)) {\n    throw new Error(\"Invalid URL: '\" + url + \"'\");\n  }\n\n  var doc = document;\n  var anchorElement = doc.createElement('a');\n\n  if (base !== undefined) {\n    doc = document.implementation.createHTMLDocument('');\n    var baseElement = doc.createElement('base');\n    baseElement.href = base;\n    doc.head.appendChild(baseElement);\n    doc.body.appendChild(anchorElement);\n  }\n\n  anchorElement.href = url;\n  return anchorElement;\n}\n\nvar isURLSupported;\n\nfunction checkURLSupported() {\n  if (isURLSupported !== undefined) {\n    return isURLSupported;\n  }\n\n  try {\n    var url = new URL('http://test/path');\n    isURLSupported = url.href === 'http://test/path';\n    return isURLSupported;\n  } catch (_a) {\n    isURLSupported = false;\n  }\n\n  return isURLSupported;\n}","map":{"version":3,"sources":["../src/urlPolyfill.ts"],"names":[],"mappings":"AAAA,SAAS,oBAAT,EAA+B,iBAA/B,QAAwD,SAAxD;AAEA,OAAM,SAAU,YAAV,CAAuB,GAAvB,EAAkC;AACtC,SAAO,QAAQ,CAAC,GAAD,EAAM,iBAAiB,EAAvB,CAAR,CAAmC,IAA1C;AACD;AAED,OAAM,SAAU,UAAV,CAAqB,GAArB,EAAgC;AACpC,MAAI;AACF,WAAO,CAAC,CAAC,QAAQ,CAAC,GAAD,CAAjB;AACD,GAFD,CAEE,OAAA,EAAA,EAAM;AACN,WAAO,KAAP;AACD;AACF;AAED,OAAM,SAAU,cAAV,CAAyB,IAAzB,EAAuC,IAAvC,EAAmD;AACvD,SAAO,SAAS,CAAC,IAAD,CAAT,KAAoB,SAAS,CAAC,IAAD,CAApC;AACD;AAED,OAAM,SAAU,SAAV,CAAoB,GAApB,EAA+B;AACnC,SAAO,oBAAoB,CAAC,QAAQ,CAAC,GAAD,CAAT,CAA3B;AACD;AAED,OAAM,SAAU,WAAV,CAAsB,GAAtB,EAAiC;AACrC,MAAM,QAAQ,GAAG,QAAQ,CAAC,GAAD,CAAR,CAAc,QAA/B;AACA,SAAO,QAAQ,CAAC,CAAD,CAAR,KAAgB,GAAhB,GAAsB,QAAtB,GAAiC,MAAI,QAA5C;AACD;AAED,OAAM,SAAU,SAAV,CAAoB,GAApB,EAA+B;AACnC,SAAO,QAAQ,CAAC,GAAD,CAAR,CAAc,MAArB;AACD;AAED,OAAM,SAAU,OAAV,CAAkB,GAAlB,EAA6B;AACjC,SAAO,QAAQ,CAAC,GAAD,CAAR,CAAc,IAArB;AACD;;AAED,SAAS,QAAT,CAAkB,GAAlB,EAA+B,IAA/B,EAA4C;AAC1C,MAAI,iBAAiB,EAArB,EAAyB;AACvB,WAAO,IAAI,KAAK,SAAT,GAAqB,IAAI,GAAJ,CAAQ,GAAR,EAAa,IAAb,CAArB,GAA0C,IAAI,GAAJ,CAAQ,GAAR,CAAjD;AACD;;AACD,MAAI,IAAI,KAAK,SAAT,IAAsB,CAAC,IAAI,IAAJ,CAAS,GAAT,CAA3B,EAA0C;AACxC,UAAM,IAAI,KAAJ,CAAU,mBAAiB,GAAjB,GAAoB,GAA9B,CAAN;AACD;;AACD,MAAI,GAAG,GAAG,QAAV;AACA,MAAM,aAAa,GAAG,GAAG,CAAC,aAAJ,CAAkB,GAAlB,CAAtB;;AACA,MAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,IAAA,GAAG,GAAG,QAAQ,CAAC,cAAT,CAAwB,kBAAxB,CAA2C,EAA3C,CAAN;AACA,QAAM,WAAW,GAAG,GAAG,CAAC,aAAJ,CAAkB,MAAlB,CAApB;AACA,IAAA,WAAW,CAAC,IAAZ,GAAmB,IAAnB;AACA,IAAA,GAAG,CAAC,IAAJ,CAAS,WAAT,CAAqB,WAArB;AACA,IAAA,GAAG,CAAC,IAAJ,CAAS,WAAT,CAAqB,aAArB;AACD;;AACD,EAAA,aAAa,CAAC,IAAd,GAAqB,GAArB;AACA,SAAO,aAAP;AACD;;AAED,IAAI,cAAJ;;AACA,SAAS,iBAAT,GAA0B;AACxB,MAAI,cAAc,KAAK,SAAvB,EAAkC;AAChC,WAAO,cAAP;AACD;;AACD,MAAI;AACF,QAAM,GAAG,GAAG,IAAI,GAAJ,CAAQ,kBAAR,CAAZ;AACA,IAAA,cAAc,GAAG,GAAG,CAAC,IAAJ,KAAa,kBAA9B;AACA,WAAO,cAAP;AACD,GAJD,CAIE,OAAA,EAAA,EAAM;AACN,IAAA,cAAc,GAAG,KAAjB;AACD;;AACD,SAAO,cAAP;AACD","sourceRoot":"","sourcesContent":["import { getLinkElementOrigin, getLocationOrigin } from './utils';\nexport function normalizeUrl(url) {\n    return buildUrl(url, getLocationOrigin()).href;\n}\nexport function isValidUrl(url) {\n    try {\n        return !!buildUrl(url);\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function haveSameOrigin(url1, url2) {\n    return getOrigin(url1) === getOrigin(url2);\n}\nexport function getOrigin(url) {\n    return getLinkElementOrigin(buildUrl(url));\n}\nexport function getPathName(url) {\n    var pathname = buildUrl(url).pathname;\n    return pathname[0] === '/' ? pathname : \"/\" + pathname;\n}\nexport function getSearch(url) {\n    return buildUrl(url).search;\n}\nexport function getHash(url) {\n    return buildUrl(url).hash;\n}\nfunction buildUrl(url, base) {\n    if (checkURLSupported()) {\n        return base !== undefined ? new URL(url, base) : new URL(url);\n    }\n    if (base === undefined && !/:/.test(url)) {\n        throw new Error(\"Invalid URL: '\" + url + \"'\");\n    }\n    var doc = document;\n    var anchorElement = doc.createElement('a');\n    if (base !== undefined) {\n        doc = document.implementation.createHTMLDocument('');\n        var baseElement = doc.createElement('base');\n        baseElement.href = base;\n        doc.head.appendChild(baseElement);\n        doc.body.appendChild(anchorElement);\n    }\n    anchorElement.href = url;\n    return anchorElement;\n}\nvar isURLSupported;\nfunction checkURLSupported() {\n    if (isURLSupported !== undefined) {\n        return isURLSupported;\n    }\n    try {\n        var url = new URL('http://test/path');\n        isURLSupported = url.href === 'http://test/path';\n        return isURLSupported;\n    }\n    catch (_a) {\n        isURLSupported = false;\n    }\n    return isURLSupported;\n}\n//# sourceMappingURL=urlPolyfill.js.map"]},"metadata":{},"sourceType":"module"}