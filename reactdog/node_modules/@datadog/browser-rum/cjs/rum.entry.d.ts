import { Context, ContextValue, UserConfiguration } from '@datadog/browser-core';
import { UserActionReference } from './userActionCollection';
export interface RumUserConfiguration extends UserConfiguration {
    applicationId: string;
}
export interface InternalContext {
    application_id: string;
    session_id: string | undefined;
    view: {
        id: string;
    };
    user_action?: UserActionReference;
}
declare const STUBBED_RUM: {
    init(userConfiguration: RumUserConfiguration): void;
    addRumGlobalContext(key: string, value: ContextValue): void;
    setRumGlobalContext(context: Context): void;
    addUserAction(name: string, context: Context): void;
    getInternalContext(): InternalContext | undefined;
};
export declare type RumGlobal = typeof STUBBED_RUM;
export declare const datadogRum: {
    init(userConfiguration: RumUserConfiguration): void;
    addRumGlobalContext(key: string, value: ContextValue): void;
    setRumGlobalContext(context: Context): void;
    addUserAction(name: string, context: Context): void;
    getInternalContext(): InternalContext | undefined;
};
export {};
