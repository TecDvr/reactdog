import { LifeCycle } from './lifeCycle';
import { RumSession } from './rumSession';
export interface View {
    id: string;
    location: Location;
    measures: ViewMeasures;
    documentVersion: number;
    startTime: number;
    duration: number;
    loadingTime?: number | undefined;
    loadingType: ViewLoadingType;
}
export interface ViewMeasures {
    firstContentfulPaint?: number;
    domInteractive?: number;
    domContentLoaded?: number;
    domComplete?: number;
    loadEventEnd?: number;
    errorCount: number;
    resourceCount: number;
    longTaskCount: number;
    userActionCount: number;
}
export declare enum ViewLoadingType {
    INITIAL_LOAD = "initial_load",
    ROUTE_CHANGE = "route_change"
}
export declare const THROTTLE_VIEW_UPDATE_PERIOD = 3000;
export declare function startViewCollection(location: Location, lifeCycle: LifeCycle, session: RumSession): void;
interface ViewContext {
    id: string;
    location: Location;
    sessionId: string | undefined;
}
export declare let viewContext: ViewContext;
export {};
