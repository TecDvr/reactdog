import { Observable } from './observable';
export declare enum RequestType {
    FETCH = "fetch",
    XHR = "xhr"
}
export interface RequestStartEvent {
    requestId: number;
}
export interface RequestCompleteEvent {
    requestId: number;
    type: RequestType;
    method: string;
    url: string;
    status: number;
    response?: string;
    responseType?: string;
    startTime: number;
    duration: number;
    traceId?: number;
}
export declare type RequestObservables = [Observable<RequestStartEvent>, Observable<RequestCompleteEvent>];
export declare function startRequestCollection(): RequestObservables;
export declare function trackXhr([requestStartObservable, requestCompleteObservable]: RequestObservables): void;
export declare function trackFetch([requestStartObservable, requestCompleteObservable]: RequestObservables): void;
export declare function isRejected(request: RequestCompleteEvent): boolean;
export declare function isServerError(request: RequestCompleteEvent): boolean;
